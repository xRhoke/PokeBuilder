[{"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/index.js":"1","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/App.js":"2","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/TeamBuilder.js":"3","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/PokeDetails.js":"4","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/PokemonList.js":"5","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/FilterBar.js":"6","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/EmptyTeamSlot.js":"7","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/FilledTeamSlot.js":"8","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/RadarChart.js":"9","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/Pokemon.js":"10","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Route/Build.js":"11","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Route/Teams.js":"12","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/TeamList.js":"13","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/Team.js":"14","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/TeamSlot.js":"15","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Route/Login.js":"16","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Route/LandingPage.js":"17","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/data/scripts/starterData.js":"18"},{"size":922,"mtime":1636992586445,"results":"19","hashOfConfig":"20"},{"size":1946,"mtime":1637033253021,"results":"21","hashOfConfig":"20"},{"size":2944,"mtime":1637012044877,"results":"22","hashOfConfig":"20"},{"size":3332,"mtime":1636593631821,"results":"23","hashOfConfig":"20"},{"size":520,"mtime":1636476488941,"results":"24","hashOfConfig":"20"},{"size":5513,"mtime":1637031754912,"results":"25","hashOfConfig":"20"},{"size":240,"mtime":1636386515363,"results":"26","hashOfConfig":"20"},{"size":526,"mtime":1636594412666,"results":"27","hashOfConfig":"20"},{"size":1667,"mtime":1636988710292,"results":"28","hashOfConfig":"20"},{"size":1290,"mtime":1636422907592,"results":"29","hashOfConfig":"20"},{"size":2143,"mtime":1637029504649,"results":"30","hashOfConfig":"20"},{"size":247,"mtime":1637005018857,"results":"31","hashOfConfig":"20"},{"size":2116,"mtime":1637032557903,"results":"32","hashOfConfig":"20"},{"size":1350,"mtime":1636596251394,"results":"33","hashOfConfig":"20"},{"size":312,"mtime":1636596218098,"results":"34","hashOfConfig":"20"},{"size":2191,"mtime":1637033467538,"results":"35","hashOfConfig":"20"},{"size":1295,"mtime":1636596945820,"results":"36","hashOfConfig":"20"},{"size":441077,"mtime":1636594082207,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1khjf4p",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/index.js",["82","83","84"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport App from \"./App\";\nimport Teams from \"./Route/Teams\";\nimport Build from \"./Route/Build\";\nimport Login from \"./Route/Login\";\nimport LandingPage from \"./Route/LandingPage\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <Routes>\n                <Route path=\"/\" element={<LandingPage/>}/>\n                <Route path={\"app/*\"} element={<App/>}/>\n                <Route\n                    path=\"*\"\n                    element={\n                        <main style={{padding: \"1rem\", color: \"white\"}}>\n                            <p>There's nothing here!</p>\n                        </main>\n                    }\n                />\n            </Routes>\n        </BrowserRouter>,\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n",["85","86"],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/App.js",["87","88"],"import './App.css';\nimport {Link, NavLink, Route, Routes} from \"react-router-dom\";\nimport {CgPokemon} from \"react-icons/cg\";\nimport {useState} from \"react\";\nimport Build from \"./Route/Build\";\nimport Teams from \"./Route/Teams\";\nimport Login from \"./Route/Login\";\n\nconst App = () => {\n\n    const [loggedIn, setLoggedIn] = useState(JSON.parse(sessionStorage.getItem(\"loggedIn\")));\n    const [currentUser, setCurrentUser] = useState(sessionStorage.getItem(\"currentUser\"));\n\n    return (\n        <div className={\"App\"}>\n                    <header className={\"header\"}>\n                        <div className={\"title\"}>\n                            <CgPokemon/>\n                            <Link to={\"/\"} className={\"titleLink\"}>Pok√©Builder</Link>\n                        </div>\n                        <div className={\"navBar\"}>\n                            <NavLink className={({isActive}) => isActive ? \"activeLink\" : \"inactiveLink\"}\n                                     to={\"/app/build\"}>Build</NavLink>\n                            <NavLink className={({isActive}) => isActive ? \"activeLink\" : \"inactiveLink\"}\n                                     to={\"/app/teams\"}>Teams</NavLink>\n                            <NavLink className={({isActive}) => isActive ? \"activeLink\" : \"inactiveLink\"}\n                                     to={\"/app/login\"}>Login</NavLink>\n                        </div>\n                    </header>\n                    <Routes>\n                        <Route path={\"build\"} element={<Build currentUser={currentUser}/>}/>\n                        <Route path={\"teams\"} element={<Teams currentUser={currentUser}/>}/>\n                        <Route\n                            path={\"login\"}\n                            element={<Login currentUser={currentUser}\n                                            setCurrentUser={setCurrentUser}/>}/>\n                    </Routes>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/TeamBuilder.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/PokeDetails.js",["89"],"import \"./PokeDetails.css\"\nimport {useEffect, useState} from \"react\";\nimport {CgPokemon} from \"react-icons/cg\"\nimport axios from \"axios\";\nimport RadarChart from \"./RadarChart\";\n\nconst PokeDetails = ({currentPokemon, setCurrentPokemon}) => {\n\n    // const [moves, setMoves] = useState([]);\n    const [abilities, setAbilities] = useState([]);\n    const [stats, setStats] = useState([]);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        console.log(stats)\n    }, [stats]);\n\n    const fetchData = () => {\n        // axios.get(\"/pokemon/\" + currentPokemon.id + \"/moves\")\n        //     .then(response => setMoves(response.data));\n\n        axios.get(\"/pokemon/\" + currentPokemon.id + \"/abilities\")\n            .then(response => setAbilities(response.data));\n\n        axios.get(\"/pokemon/\" + currentPokemon.id + \"/stats\")\n            .then(response => setStats(response.data));\n    }\n\n    const typeList = currentPokemon.types.map(typeSlot => {\n        return <div key={`${currentPokemon.id}_${typeSlot.slot}`}\n                    className={\"type \" + typeSlot.type.name}>{typeSlot.type.name}</div>\n    });\n\n    const abilityList = abilities.map(abilitySlot => {\n        return <div key={`${currentPokemon.id}_${abilitySlot.slot}`}\n                    className={\"abilityName\"}\n        >\n            {abilitySlot.ability.name}\n        </div>\n    });\n\n    const chartData = {\n        labels: [\"HP\", \"Atk\", \"Def\", \"SpA\", \"SpD\", \"Speed\"],\n        datasets: [\n            {\n                data: stats.map(statSlot => statSlot.base_stat),\n                fill: true,\n                backgroundColor: \"#79C99E\",\n                borderColor: \"black\",\n            }\n        ],\n    }\n\n    return (\n        <div className={\"PokeDetails\"}>\n            <button className={\"detailsCloseButton\"} onClick={() => setCurrentPokemon({})}>X</button>\n            <div className={\"detailRow1\"}>\n                <div className={\"imageWithType\"}>\n                    <img className={\"pokemonDetailsImage\"} src={currentPokemon.smallImage} alt={currentPokemon.name}/>\n                    <div className={\"detailsTypeList\"}>{typeList}</div>\n                </div>\n                <div className={\"pokemonData\"}>\n                    <div className={\"pokemonName\"}>\n                        <div className={\"pokemonNumber\"}>\n                            <CgPokemon/>\n                            {currentPokemon.id}\n                        </div>\n                        {currentPokemon.name[0].toUpperCase() + currentPokemon.name.slice(1)}\n                    </div>\n                    <div className={\"heightWeight\"}>\n                        <div className={\"pokeHeight\"}>Height: {currentPokemon.height / 10} m</div>\n                        <div className={\"pokeWeight\"}>Weight: {currentPokemon.weight / 10} kg</div>\n                    </div>\n                    <div className={\"abilities\"}>\n                        <div>Abilities:</div>\n                        {abilityList}\n                    </div>\n                    <div className={\"pokemonStats\"}>\n                        <div className={\"statChart\"}>\n                            <RadarChart chartData={chartData}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PokeDetails;","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/PokemonList.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/FilterBar.js",["90","91"],"import \"./FilterBar.css\"\nimport {useEffect, useState} from \"react\";\nimport {MdOutlineFilterList} from \"react-icons/md\";\nimport {starterData} from \"../data/scripts/starterData\";\n\nconst FilterBar = ({pokemonData, setPokemonData, setPageNumber}) => {\n\n    const [filterString, setFilterString] = useState(\"\");\n    const [selectedGeneration, setSelectedGeneration] = useState(\"all\");\n    const [selectedType, setSelectedType] = useState(\"all\");\n\n    useEffect(() => {\n        setPageNumber(1);\n        setPokemonData(pokemonData.filter(pokemon => pokemon.name.includes(filterString.toLowerCase())));\n    }, [filterString]);\n\n    useEffect(() => {\n        setPageNumber(1);\n        if (selectedGeneration === \"all\") {\n            setPokemonData(starterData);\n        }\n        if (selectedGeneration === \"I\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 1 && pokemon.id <= 151)));\n        }\n        if (selectedGeneration === \"II\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 152 && pokemon.id <= 251)));\n        }\n        if (selectedGeneration === \"III\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 252 && pokemon.id <= 386)));\n        }\n        if (selectedGeneration === \"IV\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 387 && pokemon.id <= 493)));\n        }\n        if (selectedGeneration === \"V\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 494 && pokemon.id <= 649)));\n        }\n        if (selectedGeneration === \"VI\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 650 && pokemon.id <= 721)));\n        }\n        if (selectedGeneration === \"VII\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 722 && pokemon.id <= 809)));\n        }\n        if (selectedGeneration === \"VIII\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 810 && pokemon.id <= 898)));\n        }\n    }, [selectedGeneration]);\n\n    const handleFilterChange = event => {\n        document.getElementById(\"PokemonList\").scrollTop = 0;\n        setFilterString(event.target.value);\n    }\n\n    const handleResetFilter = () => {\n        setPageNumber(1);\n        setPokemonData(starterData);\n        document.getElementById(\"PokemonList\").scrollTop = 0;\n        setFilterString(\"\");\n        setSelectedGeneration(\"all\");\n        setSelectedType(\"all\");\n    }\n\n    const handleSelectGenerationChanged = event => {\n        setPageNumber(1);\n        document.getElementById(\"PokemonList\").scrollTop = 0;\n\n        setSelectedGeneration(event.target.value);\n    }\n\n    const handleTypeValueChanged = event => {\n        setPageNumber(1);\n        document.getElementById(\"PokemonList\").scrollTop = 0;\n        setSelectedType(event.target.value);\n        if (event.target.value === \"all\") {\n            setPokemonData(pokemonData);\n        } else {\n            setPokemonData(pokemonData.filter(pokemon => pokemon.types.map(typeSlot => typeSlot.type.name).includes(event.target.value)));\n        }\n\n    }\n\n    return (\n        <div className={\"FilterBar\"}>\n            <div className={\"filterTitle\"}>\n                <MdOutlineFilterList className={\"filterIcon\"}/>\n                <div>\n                    Filters\n                </div>\n            </div>\n            <div className={\"filterRow\"}>\n                Name:\n                <input\n                    className={\"filterInput\"}\n                    type={\"text\"}\n                    value={filterString}\n                    onChange={event => handleFilterChange(event)}\n                />\n            </div>\n            <div className={\"filterRow\"}>\n                Generation:\n                <select className={\"filterInput\"} value={selectedGeneration}\n                        onChange={event => handleSelectGenerationChanged(event)}>\n                    <option>all</option>\n                    <option>I</option>\n                    <option>II</option>\n                    <option>III</option>\n                    <option>IV</option>\n                    <option>V</option>\n                    <option>VI</option>\n                    <option>VII</option>\n                    <option>VIII</option>\n                </select>\n            </div>\n            <div className={\"filterRow\"}>\n                Type:\n                <select className={\"filterInput\"} value={selectedType}\n                        onChange={event => handleTypeValueChanged(event)}>\n                    <option>all</option>\n                    <option>bug</option>\n                    <option>dark</option>\n                    <option>dragon</option>\n                    <option>electric</option>\n                    <option>fairy</option>\n                    <option>fire</option>\n                    <option>fighting</option>\n                    <option>flying</option>\n                    <option>ghost</option>\n                    <option>grass</option>\n                    <option>ground</option>\n                    <option>ice</option>\n                    <option>normal</option>\n                    <option>poison</option>\n                    <option>psychic</option>\n                    <option>rock</option>\n                    <option>steel</option>\n                    <option>water</option>\n                </select>\n            </div>\n            <button className={\"resetButton\"} onClick={() => handleResetFilter()}>reset</button>\n        </div>\n    );\n}\n\nexport default FilterBar;","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/EmptyTeamSlot.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/FilledTeamSlot.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/RadarChart.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/Pokemon.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Route/Build.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Route/Teams.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/TeamList.js",["92"],"import \"./TeamList.css\";\nimport Team from \"./Team\";\nimport axios from \"axios\";\nimport {useEffect, useState} from \"react\";\nimport PokeDetails from \"./PokeDetails\";\n\n\nconst TeamList = ({currentUser}) => {\n\n    const [teams, setTeams] = useState([]);\n    const [userTeams, setUserTeams] = useState([]);\n    const [currentPokemon, setCurrentPokemon] = useState({});\n\n    const fetchTeams = () => {\n        if (currentUser) {\n            axios.get(\"/teams/\" + currentUser)\n                .then(response => setUserTeams(response.data));\n        }\n\n        axios.get(\"/teams\")\n            .then(response => setTeams(response.data));\n    }\n\n    const handleTeamDeleted = team => {\n        axios.delete(\"/teams/\" + team.id)\n            .then(response => console.log(response.data))\n            .then(() => fetchTeams());\n    }\n\n    useEffect(() => {\n        fetchTeams();\n        console.log(teams);\n    }, []);\n\n    const teamList = teams.map(team => {\n        return <Team key={team.id} team={team} onTeamDeleted={handleTeamDeleted}\n                     setCurrentPokemon={setCurrentPokemon}/>\n    });\n\n    const userTeamList = userTeams.map(team => {\n        return <Team key={team.id} team={team} onTeamDeleted={handleTeamDeleted}\n                     setCurrentPokemon={setCurrentPokemon}/>\n    });\n\n    return (\n        <div className={\"wrapper\"}>\n            {currentUser &&\n            <div className={\"teamsContainer\"}>\n                <div className={\"teamsListTitle\"}>My Teams</div>\n                <div className={\"TeamsList\"}>\n                    {userTeamList}\n                </div>\n            </div>\n            }\n            <div className={\"teamsContainer\"}>\n                <div className={\"teamsListTitle\"}>All Teams</div>\n                <div className={\"TeamsList\"}>\n                    {teamList}\n                    {currentPokemon.name &&\n                    <PokeDetails currentPokemon={currentPokemon}\n                                 setCurrentPokemon={pokemon => setCurrentPokemon(pokemon)}/>}\n                </div>\n            </div>\n        </div>\n    )\n        ;\n}\n\nexport default TeamList;","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/Team.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/TeamSlot.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Route/Login.js",["93"],"import \"./Login.css\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst Login = ({currentUser, setCurrentUser}) => {\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const handleLogin = (username, password) => {\n        let user = {\n            username: username,\n            password: password,\n        };\n\n        axios.post(\"/user/login\", user).then(response => {\n            sessionStorage.setItem(\"currentUser\", username);\n            setCurrentUser(username);\n        })\n            .then(() => setUsername(\"\"))\n            .then(() => setPassword(\"\"));\n\n    };\n\n    const handleCreateUser = (username, password) => {\n        axios.post(\"/user\", {\n            username: username,\n            password: password,\n        }).then(() => setUsername(\"\"))\n            .then(() => setPassword(\"\"));\n    };\n\n    const handleUsernameChange = event => {\n        setUsername(event.target.value);\n    }\n\n    const handlePasswordChange = event => {\n        setPassword(event.target.value);\n    }\n\n    if (currentUser) {\n        return (\n            <div className={\"loginConfirmation\"}>{currentUser} is logged in</div>\n        );\n    }\n\n    return (\n        <div className={\"Login\"}>\n            <div className={\"formRow\"}>\n                <label>Username </label>\n                <input type={\"text\"} name={\"username\"} value={username}\n                       onChange={event => handleUsernameChange(event)}/>\n            </div>\n            <div className={\"formRow\"}>\n                <label>Password </label>\n                <input type={\"password\"} name={\"password\"} value={password}\n                       onChange={event => handlePasswordChange(event)}/>\n            </div>\n            <button\n                className={\"loginButton\"}\n                name={\"login\"}\n                onClick={() => handleLogin(username, password)}\n            >Login\n            </button>\n            <button\n                className={\"createButton\"} name={\"create\"}\n                onClick={() => handleCreateUser(username, password)}\n            >Create\n            </button>\n        </div>\n    );\n}\n\nexport default Login;","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Route/LandingPage.js",["94","95","96","97"],"import {CgPokemon} from \"react-icons/cg\";\nimport {Link, Outlet} from \"react-router-dom\";\nimport \"./LandingPage.css\";\n\nconst LandingPage = () => {\n    return (\n        <div className={\"landingPageContainer\"}>\n            <div className={\"LandingPage\"}>\n                <div className={\"landingPageTitleContentContainer\"}>\n                <div className={\"landingPageTitle\"}>\n                    <CgPokemon/>\n                    <div>Pok√©Builder</div>\n                </div>\n                <div className={\"landingPageContent\"}>a tool for building and sharing Pok√©mon teams</div>\n                </div>\n                <div className={\"imgRow\"}>\n                    <img className={\"landingPageImage\"}\n                         src={\"https://media.giphy.com/media/IGfnmF45dRRCKBLxoi/giphy.gif\"}/>\n                    <img className={\"landingPageImage\"}\n                         src={\"https://media.giphy.com/media/MOS0e7uuQiD2oB54PZ/giphy.gif\"}/>\n                    <img className={\"landingPageImage\"}\n                         src={\"https://media.giphy.com/media/B6PQgj1ZDPy9TDXw1f/giphy.gif\"}/>\n                </div>\n                <Link className={\"getStarted\"} to={\"/app/build\"}>Get\n                    Started</Link>\n            </div>\n        </div>\n    );\n}\n\nexport default LandingPage;","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/data/scripts/starterData.js",[],{"ruleId":"98","severity":1,"message":"99","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":13},{"ruleId":"98","severity":1,"message":"102","line":7,"column":8,"nodeType":"100","messageId":"101","endLine":7,"endColumn":13},{"ruleId":"98","severity":1,"message":"103","line":8,"column":8,"nodeType":"100","messageId":"101","endLine":8,"endColumn":13},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"98","severity":1,"message":"108","line":11,"column":12,"nodeType":"100","messageId":"101","endLine":11,"endColumn":20},{"ruleId":"98","severity":1,"message":"109","line":11,"column":22,"nodeType":"100","messageId":"101","endLine":11,"endColumn":33},{"ruleId":"110","severity":1,"message":"111","line":15,"column":8,"nodeType":"112","endLine":15,"endColumn":10,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":15,"column":8,"nodeType":"112","endLine":15,"endColumn":22,"suggestions":"115"},{"ruleId":"110","severity":1,"message":"114","line":46,"column":8,"nodeType":"112","endLine":46,"endColumn":28,"suggestions":"116"},{"ruleId":"110","severity":1,"message":"117","line":33,"column":8,"nodeType":"112","endLine":33,"endColumn":10,"suggestions":"118"},{"ruleId":"98","severity":1,"message":"119","line":2,"column":9,"nodeType":"100","messageId":"101","endLine":2,"endColumn":18},{"ruleId":"98","severity":1,"message":"120","line":2,"column":15,"nodeType":"100","messageId":"101","endLine":2,"endColumn":21},{"ruleId":"121","severity":1,"message":"122","line":17,"column":21,"nodeType":"123","endLine":18,"endColumn":94},{"ruleId":"121","severity":1,"message":"122","line":19,"column":21,"nodeType":"123","endLine":20,"endColumn":94},{"ruleId":"121","severity":1,"message":"122","line":21,"column":21,"nodeType":"123","endLine":22,"endColumn":94},"no-unused-vars","'Teams' is defined but never used.","Identifier","unusedVar","'Build' is defined but never used.","'Login' is defined but never used.","no-native-reassign",["124"],"no-negated-in-lhs",["125"],"'loggedIn' is assigned a value but never used.","'setLoggedIn' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["126"],"React Hook useEffect has missing dependencies: 'pokemonData', 'setPageNumber', and 'setPokemonData'. Either include them or remove the dependency array. If 'setPageNumber' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["127"],["128"],"React Hook useEffect has missing dependencies: 'fetchTeams' and 'teams'. Either include them or remove the dependency array.",["129"],"'useEffect' is defined but never used.","'Outlet' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [fetchData]",{"range":"138","text":"139"},"Update the dependencies array to be: [filterString, pokemonData, setPageNumber, setPokemonData]",{"range":"140","text":"141"},"Update the dependencies array to be: [pokemonData, selectedGeneration, setPageNumber, setPokemonData]",{"range":"142","text":"143"},"Update the dependencies array to be: [fetchTeams, teams]",{"range":"144","text":"145"},[436,438],"[fetchData]",[603,617],"[filterString, pokemonData, setPageNumber, setPokemonData]",[2003,2023],"[pokemonData, selectedGeneration, setPageNumber, setPokemonData]",[899,901],"[fetchTeams, teams]"]
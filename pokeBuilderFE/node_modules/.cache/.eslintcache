[{"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/index.js":"1","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/App.js":"2","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/TeamBuilder.js":"3","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/PokeDetails.js":"4","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/PokemonList.js":"5","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/FilterBar.js":"6","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/data/starterData.js":"7","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/EmptyTeamSlot.js":"8","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/FilledTeamSlot.js":"9","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/RadarChart.js":"10","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/Pokemon.js":"11","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Route/Build.js":"12","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Route/Teams.js":"13","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/TeamList.js":"14","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/Team.js":"15","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/TeamSlot.js":"16"},{"size":959,"mtime":1636565908057,"results":"17","hashOfConfig":"18"},{"size":1120,"mtime":1636567196675,"results":"19","hashOfConfig":"18"},{"size":2425,"mtime":1636559353315,"results":"20","hashOfConfig":"18"},{"size":3390,"mtime":1636409340411,"results":"21","hashOfConfig":"18"},{"size":520,"mtime":1636476488941,"results":"22","hashOfConfig":"18"},{"size":5505,"mtime":1636486430188,"results":"23","hashOfConfig":"18"},{"size":345997,"mtime":1635879733604,"results":"24","hashOfConfig":"18"},{"size":240,"mtime":1636386515363,"results":"25","hashOfConfig":"18"},{"size":521,"mtime":1636388265931,"results":"26","hashOfConfig":"18"},{"size":1667,"mtime":1636404527172,"results":"27","hashOfConfig":"18"},{"size":1290,"mtime":1636422907592,"results":"28","hashOfConfig":"18"},{"size":2071,"mtime":1636561736387,"results":"29","hashOfConfig":"18"},{"size":209,"mtime":1636562480090,"results":"30","hashOfConfig":"18"},{"size":643,"mtime":1636564272837,"results":"31","hashOfConfig":"18"},{"size":611,"mtime":1636564450199,"results":"32","hashOfConfig":"18"},{"size":245,"mtime":1636563760250,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1khjf4p",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/index.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/App.js",["69"],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/TeamBuilder.js",[],["70","71"],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/PokeDetails.js",["72"],"import \"./PokeDetails.css\"\nimport {useEffect, useState} from \"react\";\nimport {CgPokemon} from \"react-icons/cg\"\nimport axios from \"axios\";\nimport RadarChart from \"./RadarChart\";\n\nconst PokeDetails = ({currentPokemon, setCurrentPokemon}) => {\n\n    // const [moves, setMoves] = useState([]);\n    const [abilities, setAbilities] = useState([]);\n    const [stats, setStats] = useState([]);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    useEffect(() => {\n        console.log(stats)\n    }, [stats]);\n\n    const fetchData = () => {\n        // axios.get(\"http://localhost:8080/pokemon/\" + currentPokemon.id + \"/moves\")\n        //     .then(response => setMoves(response.data));\n\n        axios.get(\"http://localhost:8080/pokemon/\" + currentPokemon.id + \"/abilities\")\n            .then(response => setAbilities(response.data));\n\n        axios.get(\"http://localhost:8080/pokemon/\" + currentPokemon.id + \"/stats\")\n            .then(response => setStats(response.data));\n    }\n\n    const typeList = currentPokemon.types.map(typeSlot => {\n        return <div key={`${currentPokemon.id}_${typeSlot.slot}`}\n                    className={\"type \" + typeSlot.type.name}>{typeSlot.type.name}</div>\n    });\n\n    const abilityList = abilities.map(abilitySlot => {\n        return <div key={`${currentPokemon.id}_${abilitySlot.slot}`}\n                    className={\"abilityName\"}\n        >\n            {abilitySlot.ability.name}\n        </div>\n    });\n\n    const chartData = {\n        labels: [\"HP\", \"Atk\", \"Def\", \"SpA\", \"SpD\", \"Speed\"],\n        datasets: [\n            {\n                data: stats.map(statSlot => statSlot.base_stat),\n                fill: true,\n                backgroundColor: \"#79C99E\",\n                borderColor: \"black\",\n            }\n        ],\n    }\n\n    return (\n        <div className={\"PokeDetails\"}>\n            <button className={\"detailsCloseButton\"} onClick={() => setCurrentPokemon({})}>X</button>\n            <div className={\"detailRow1\"}>\n                <div className={\"imageWithType\"}>\n                    <img className={\"pokemonDetailsImage\"} src={currentPokemon.image} alt={currentPokemon.name}/>\n                    <div className={\"detailsTypeList\"}>{typeList}</div>\n                </div>\n                <div className={\"pokemonData\"}>\n                    <div className={\"pokemonName\"}>\n                        <div className={\"pokemonNumber\"}>\n                            <CgPokemon/>\n                            {currentPokemon.id}\n                        </div>\n                        {currentPokemon.name[0].toUpperCase() + currentPokemon.name.slice(1)}\n                    </div>\n                    <div className={\"heightWeight\"}>\n                        <div className={\"pokeHeight\"}>Height: {currentPokemon.height / 10} m</div>\n                        <div className={\"pokeWeight\"}>Weight: {currentPokemon.weight / 10} kg</div>\n                    </div>\n                    <div className={\"abilities\"}>\n                        <div>Abilities:</div>\n                        {abilityList}\n                    </div>\n                    <div className={\"pokemonStats\"}>\n                        <div className={\"statChart\"}>\n                            <RadarChart chartData={chartData}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PokeDetails;","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/PokemonList.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/FilterBar.js",["73","74"],"import \"./FilterBar.css\"\nimport {useEffect, useState} from \"react\";\nimport {MdOutlineFilterList} from \"react-icons/md\";\nimport {starterData} from \"../data/starterData\";\n\nconst FilterBar = ({pokemonData, setPokemonData, setPageNumber}) => {\n\n    const [filterString, setFilterString] = useState(\"\");\n    const [selectedGeneration, setSelectedGeneration] = useState(\"all\");\n    const [selectedType, setSelectedType] = useState(\"all\");\n\n    useEffect(() => {\n        setPageNumber(1);\n        setPokemonData(pokemonData.filter(pokemon => pokemon.name.includes(filterString.toLowerCase())));\n    }, [filterString]);\n\n    useEffect(() => {\n        setPageNumber(1);\n        if (selectedGeneration === \"all\") {\n            setPokemonData(starterData);\n        }\n        if (selectedGeneration === \"I\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 1 && pokemon.id <= 151)));\n        }\n        if (selectedGeneration === \"II\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 152 && pokemon.id <= 251)));\n        }\n        if (selectedGeneration === \"III\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 252 && pokemon.id <= 386)));\n        }\n        if (selectedGeneration === \"IV\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 387 && pokemon.id <= 493)));\n        }\n        if (selectedGeneration === \"V\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 494 && pokemon.id <= 649)));\n        }\n        if (selectedGeneration === \"VI\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 650 && pokemon.id <= 721)));\n        }\n        if (selectedGeneration === \"VII\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 722 && pokemon.id <= 809)));\n        }\n        if (selectedGeneration === \"VIII\") {\n            setPokemonData(pokemonData.filter(pokemon => (pokemon.id >= 810 && pokemon.id <= 898)));\n        }\n    }, [selectedGeneration]);\n\n    const handleFilterChange = event => {\n        document.getElementById(\"PokemonList\").scrollTop = 0;\n        setFilterString(event.target.value);\n    }\n\n    const handleResetFilter = () => {\n        setPageNumber(1);\n        setPokemonData(starterData);\n        document.getElementById(\"PokemonList\").scrollTop = 0;\n        setFilterString(\"\");\n        setSelectedGeneration(\"all\");\n        setSelectedType(\"all\");\n    }\n\n    const handleSelectGenerationChanged = event => {\n        setPageNumber(1);\n        document.getElementById(\"PokemonList\").scrollTop = 0;\n\n        setSelectedGeneration(event.target.value);\n    }\n\n    const handleTypeValueChanged = event => {\n        setPageNumber(1);\n        document.getElementById(\"PokemonList\").scrollTop = 0;\n        setSelectedType(event.target.value);\n        if (event.target.value === \"all\") {\n            setPokemonData(pokemonData);\n        } else {\n            setPokemonData(pokemonData.filter(pokemon => pokemon.types.map(typeSlot => typeSlot.type.name).includes(event.target.value)));\n        }\n\n    }\n\n    return (\n        <div className={\"FilterBar\"}>\n            <div className={\"filterTitle\"}>\n                <MdOutlineFilterList className={\"filterIcon\"}/>\n                <div>\n                    Filters\n                </div>\n            </div>\n            <div className={\"filterRow\"}>\n                Name:\n                <input\n                    className={\"filterInput\"}\n                    type={\"text\"}\n                    value={filterString}\n                    onChange={event => handleFilterChange(event)}\n                />\n            </div>\n            <div className={\"filterRow\"}>\n                Generation:\n                <select className={\"filterInput\"} value={selectedGeneration}\n                        onChange={event => handleSelectGenerationChanged(event)}>\n                    <option>all</option>\n                    <option>I</option>\n                    <option>II</option>\n                    <option>III</option>\n                    <option>IV</option>\n                    <option>V</option>\n                    <option>VI</option>\n                    <option>VII</option>\n                    <option>VIII</option>\n                </select>\n            </div>\n            <div className={\"filterRow\"}>\n                Type:\n                <select className={\"filterInput\"} value={selectedType}\n                        onChange={event => handleTypeValueChanged(event)}>\n                    <option>all</option>\n                    <option>bug</option>\n                    <option>dark</option>\n                    <option>dragon</option>\n                    <option>electric</option>\n                    <option>fairy</option>\n                    <option>fire</option>\n                    <option>fighting</option>\n                    <option>flying</option>\n                    <option>ghost</option>\n                    <option>grass</option>\n                    <option>ground</option>\n                    <option>ice</option>\n                    <option>normal</option>\n                    <option>poison</option>\n                    <option>psychic</option>\n                    <option>rock</option>\n                    <option>steel</option>\n                    <option>water</option>\n                </select>\n            </div>\n            <button className={\"resetButton\"} onClick={() => handleResetFilter()}>reset</button>\n        </div>\n    );\n}\n\nexport default FilterBar;","/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/data/starterData.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/EmptyTeamSlot.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/FilledTeamSlot.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/RadarChart.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/Pokemon.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Route/Build.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Route/Teams.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/TeamList.js",["75"],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/Team.js",[],"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokeBuilderFE/src/Component/TeamSlot.js",[],{"ruleId":"76","severity":1,"message":"77","line":4,"column":9,"nodeType":"78","messageId":"79","endLine":4,"endColumn":17},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":15,"column":8,"nodeType":"86","endLine":15,"endColumn":10,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":15,"column":8,"nodeType":"86","endLine":15,"endColumn":22,"suggestions":"89"},{"ruleId":"84","severity":1,"message":"88","line":46,"column":8,"nodeType":"86","endLine":46,"endColumn":28,"suggestions":"90"},{"ruleId":"84","severity":1,"message":"91","line":19,"column":8,"nodeType":"86","endLine":19,"endColumn":10,"suggestions":"92"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has missing dependencies: 'pokemonData', 'setPageNumber', and 'setPokemonData'. Either include them or remove the dependency array. If 'setPageNumber' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["96"],["97"],"React Hook useEffect has a missing dependency: 'teams'. Either include it or remove the dependency array.",["98"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [fetchData]",{"range":"107","text":"108"},"Update the dependencies array to be: [filterString, pokemonData, setPageNumber, setPokemonData]",{"range":"109","text":"110"},"Update the dependencies array to be: [pokemonData, selectedGeneration, setPageNumber, setPokemonData]",{"range":"111","text":"112"},"Update the dependencies array to be: [teams]",{"range":"113","text":"114"},[436,438],"[fetchData]",[595,609],"[filterString, pokemonData, setPageNumber, setPokemonData]",[1995,2015],"[pokemonData, selectedGeneration, setPageNumber, setPokemonData]",[416,418],"[teams]"]
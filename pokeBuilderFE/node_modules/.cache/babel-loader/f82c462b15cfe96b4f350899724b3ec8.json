{"ast":null,"code":"var _jsxFileName = \"/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokebuilder/src/Component/PokeDetails.js\",\n    _s = $RefreshSig$();\n\nimport \"./PokeDetails.css\";\nimport { useEffect, useState } from \"react\";\nimport { CgPokemon } from \"react-icons/cg\";\nimport axios from \"axios\";\nimport AnyChart from \"anychart-react.min.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PokeDetails = ({\n  currentPokemon,\n  setCurrentPokemon\n}) => {\n  _s();\n\n  const [moves, setMoves] = useState([]);\n  const [abilities, setAbilities] = useState([]);\n  const [stats, setStats] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    await axios.get(\"http://localhost:8080/pokemon/\" + currentPokemon.id + \"/moves\").then(response => setMoves(response.data));\n    await axios.get(\"http://localhost:8080/pokemon/\" + currentPokemon.id + \"/abilities\").then(response => setAbilities(response.data));\n    await axios.get(\"http://localhost:8080/pokemon/\" + currentPokemon.id + \"/stats\").then(response => setStats(response.data));\n  };\n\n  const statData = {\n    labels: [\"HP\", \"Attack\", \"Defense\", \"Speed\", \"Sp. Attack\", \"Sp. Defense\"]\n  };\n  const typeList = currentPokemon.types.map(typeSlot => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: typeSlot.type.name,\n      children: typeSlot.type.name\n    }, `${currentPokemon.id}_${typeSlot.slot}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }, this);\n  });\n  const abilityList = abilities.map(abilitySlot => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"abilityName\",\n      children: abilitySlot.ability.name\n    }, `${currentPokemon.id}_${abilitySlot.slot}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PokeDetails\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"detailsCloseButton\",\n      onClick: () => setCurrentPokemon({}),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detailRow1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageWithType\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"pokemonDetailsImage\",\n          src: currentPokemon.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"types\",\n          children: typeList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemonData\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pokemonName\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pokemonNumber\",\n            children: [/*#__PURE__*/_jsxDEV(CgPokemon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), currentPokemon.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), currentPokemon.name[0].toUpperCase() + currentPokemon.name.slice(1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"heightWeight\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Height:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), \" \", currentPokemon.height / 10, \" m\", /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Weight:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), \" \", currentPokemon.weight / 10, \" kg\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"abilities\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Abilities:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), abilityList]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PokeDetails, \"2L89W1oHaWwLvvf/1g9P8xY5tBA=\");\n\n_c = PokeDetails;\nexport default PokeDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PokeDetails\");","map":{"version":3,"sources":["/Users/e2186519/Projects/Galvanize/full-stack/PokeBuilder/pokebuilder/src/Component/PokeDetails.js"],"names":["useEffect","useState","CgPokemon","axios","AnyChart","PokeDetails","currentPokemon","setCurrentPokemon","moves","setMoves","abilities","setAbilities","stats","setStats","fetchData","get","id","then","response","data","statData","labels","typeList","types","map","typeSlot","type","name","slot","abilityList","abilitySlot","ability","image","toUpperCase","slice","height","weight"],"mappings":"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","sourcesContent":["import \"./PokeDetails.css\"\nimport {useEffect, useState} from \"react\";\nimport {CgPokemon} from \"react-icons/cg\"\nimport axios from \"axios\";\nimport AnyChart from \"anychart-react.min.js\";\n\nconst PokeDetails = ({currentPokemon, setCurrentPokemon}) => {\n\n    const [moves, setMoves] = useState([]);\n    const [abilities, setAbilities] = useState([]);\n    const [stats, setStats] = useState([]);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        await axios.get(\"http://localhost:8080/pokemon/\" + currentPokemon.id + \"/moves\")\n            .then(response => setMoves(response.data));\n\n        await axios.get(\"http://localhost:8080/pokemon/\" + currentPokemon.id + \"/abilities\")\n            .then(response => setAbilities(response.data));\n\n        await axios.get(\"http://localhost:8080/pokemon/\" + currentPokemon.id + \"/stats\")\n            .then(response => setStats(response.data));\n    }\n\n    const statData = {\n        labels: [\"HP\", \"Attack\", \"Defense\", \"Speed\", \"Sp. Attack\", \"Sp. Defense\"]\n    };\n\n    const typeList = currentPokemon.types.map(typeSlot => {\n        return <div key={`${currentPokemon.id}_${typeSlot.slot}`}\n                    className={typeSlot.type.name}>{typeSlot.type.name}</div>\n    });\n\n    const abilityList = abilities.map(abilitySlot => {\n        return <div key={`${currentPokemon.id}_${abilitySlot.slot}`}\n                    className={\"abilityName\"}\n        >\n            {abilitySlot.ability.name}\n        </div>\n    })\n\n    return (\n        <div className={\"PokeDetails\"}>\n            <button className={\"detailsCloseButton\"} onClick={() => setCurrentPokemon({})}>X</button>\n            <div className={\"detailRow1\"}>\n                <div className={\"imageWithType\"}>\n                    <img className={\"pokemonDetailsImage\"} src={currentPokemon.image}/>\n                    <div className={\"types\"}>{typeList}</div>\n                </div>\n                <div className={\"pokemonData\"}>\n                    <div className={\"pokemonName\"}>\n                        <div className={\"pokemonNumber\"}>\n                            <CgPokemon/>\n                            {currentPokemon.id}\n                        </div>\n                        {currentPokemon.name[0].toUpperCase() + currentPokemon.name.slice(1)}\n                    </div>\n                    <div className={\"heightWeight\"}>\n                        <h3>Height:</h3> {currentPokemon.height/10} m\n                        <h3>Weight:</h3> {currentPokemon.weight/10} kg\n                    </div>\n                    <div className={\"abilities\"}>\n                        <h3>Abilities:</h3>\n                        {abilityList}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default PokeDetails;"]},"metadata":{},"sourceType":"module"}